/*
 * generated by Xtext 2.34.0
 */
package dk.sdu.mmmi.mdsd.ui23.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import java.util.Map
import java.util.HashMap
import dk.sdu.mmmi.mdsd.ui23.ui23.UI
import dk.sdu.mmmi.mdsd.ui23.ui23.Layout
import dk.sdu.mmmi.mdsd.ui23.ui23.Component
import dk.sdu.mmmi.mdsd.ui23.ui23.Label
import dk.sdu.mmmi.mdsd.ui23.ui23.Element
import dk.sdu.mmmi.mdsd.ui23.ui23.FormUse
import dk.sdu.mmmi.mdsd.ui23.ui23.InputText
import dk.sdu.mmmi.mdsd.ui23.ui23.Button
import dk.sdu.mmmi.mdsd.ui23.ui23.ValueInt
import dk.sdu.mmmi.mdsd.ui23.ui23.Expression

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class Ui23Generator extends AbstractGenerator {

	
	static Map<String, String> variables;

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {

		variables = new HashMap()
		val ui = resource.allContents.filter(UI).next
		fsa.generateFile(ui.title.toString.toLowerCase + "/UserInterface" + ".java", ui.compileUserInterface)
		fsa.generateFile(ui.title.toString.toLowerCase + "/BasicForm" + ".java", ui.compileBasicForm)
		fsa.generateFile("common" + "/Form" + ".java", ui.compileCommonForm)
	}
	
	/*
 * 			title Basic
			
			form Basic {
				column {
					label : "My first form"
				}
			}
	 */
	
	
	def compileUserInterface(UI ui) {
	'''
		package user_interface.«ui.title.toString.toLowerCase»;
			
		import javax.swing.*;
		
		public class UserInterface{
			public JFrame frame;
		
			public void open() {
				frame = new JFrame("«ui.title»");
				frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
				BasicForm form = new BasicForm(this);
				frame.add(form.createPanel());
				frame.pack();
				frame.setVisible(true);
			}
		}
	'''	
	} 	
	
	def compileBasicForm(UI ui) {
	'''
		package user_interface.«ui.title.toString.toLowerCase»;
				
		import javax.swing.*;
		import java.awt.event.*;
		import user_interface.common.*;
		«FOR form : ui.forms»

			public class BasicForm extends Form{
			
				UserInterface parent;
				
				BasicForm(UserInterface parent) {
					this.parent = parent;
				}
			
				public JPanel createPanel(){
					return createPanel1();
				}
			
				public JPanel createPanel1() {
					JPanel panel = new JPanel();
					«form.layout.generateLayout»
					return panel;
				}
			
				public boolean checkValidity(){
					return true;
				}
			}
		«ENDFOR»
	'''	
	} 	
	
	def compileCommonForm(UI ui) {
	'''
		package user_interface.common;
		
		import javax.swing.*;
		
		public abstract class Form{
			public abstract boolean checkValidity();
			public abstract JPanel createPanel();
		}
	'''	
	} 	
	
	def generateLayout(Layout layout) {
		'''
		«IF layout.name == 'row'»
			panel.setLayout(new BoxLayout(panel, BoxLayout.X_AXIS));
		«ENDIF»
		«IF layout.name == 'column'»
			panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
		«ENDIF»
		«FOR component : layout.components»
			«component.generateComponent»
		«ENDFOR»
		'''
	}
	
	
    dispatch def generateComponent(Layout layout) {
        generateLayout(layout)
    }

    dispatch def generateComponent(Element element) {
    	generateElement(element)
    }

    dispatch def generateComponent(FormUse formUse) '''
        panel.add(new JLabel("My first form"));
    '''
		
		
	dispatch def generateElement(Label label) '''
        panel.add(new JLabel("«label.exp»"));
    '''
		
		
	
	dispatch def generateElement(InputText inputText) '''
	
	'''
	
	dispatch def generateElement(Button button) '''
	
	'''
		
		

		
		
		
		
		
		
}




/*
 * generated by Xtext 2.34.0
 */
package dk.sdu.mmmi.mdsd.ui23.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import java.util.Map
import java.util.HashMap
import dk.sdu.mmmi.mdsd.ui23.ui23.UI

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class Ui23Generator extends AbstractGenerator {

	
	static Map<String, String> variables;

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {

		variables = new HashMap()
		val ui = resource.allContents.filter(UI).next
		fsa.generateFile(ui.title + "/BasicForm" + ".java", ui.compile)
	}
	
	def compile(UI ui) 	'''
	package user_interface.basic;
			
	import javax.swing.*;
	import java.awt.event.*;
	import user_interface.common.*;
	
	public class BasicForm extends Form{
	
		UserInterface parent;
		
		BasicForm(UserInterface parent) {
			this.parent = parent;
		}
	
		public JPanel createPanel(){
			return createPanel1();
		}
	
		public JPanel createPanel1() {
			JPanel panel = new JPanel();
			panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
			panel.add(new JLabel("My first form"));
			return panel;
		}
	
		public boolean checkValidity(){
			return true;
		}
	}
	'''
	
}




/*
 * generated by Xtext 2.34.0
 */
grammar InternalUi23;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package dk.sdu.mmmi.mdsd.ui23.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package dk.sdu.mmmi.mdsd.ui23.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import dk.sdu.mmmi.mdsd.ui23.services.Ui23GrammarAccess;

}
@parser::members {
	private Ui23GrammarAccess grammarAccess;

	public void setGrammarAccess(Ui23GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleUI
entryRuleUI
:
{ before(grammarAccess.getUIRule()); }
	 ruleUI
{ after(grammarAccess.getUIRule()); } 
	 EOF 
;

// Rule UI
ruleUI 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUIAccess().getGroup()); }
		(rule__UI__Group__0)
		{ after(grammarAccess.getUIAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunction
entryRuleFunction
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getGroup()); }
		(rule__Function__Group__0)
		{ after(grammarAccess.getFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForm
entryRuleForm
:
{ before(grammarAccess.getFormRule()); }
	 ruleForm
{ after(grammarAccess.getFormRule()); } 
	 EOF 
;

// Rule Form
ruleForm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFormAccess().getGroup()); }
		(rule__Form__Group__0)
		{ after(grammarAccess.getFormAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLayout
entryRuleLayout
:
{ before(grammarAccess.getLayoutRule()); }
	 ruleLayout
{ after(grammarAccess.getLayoutRule()); } 
	 EOF 
;

// Rule Layout
ruleLayout 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLayoutAccess().getGroup()); }
		(rule__Layout__Group__0)
		{ after(grammarAccess.getLayoutAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponent
entryRuleComponent
:
{ before(grammarAccess.getComponentRule()); }
	 ruleComponent
{ after(grammarAccess.getComponentRule()); } 
	 EOF 
;

// Rule Component
ruleComponent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentAccess().getAlternatives()); }
		(rule__Component__Alternatives)
		{ after(grammarAccess.getComponentAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getAlternatives()); }
		(rule__Element__Alternatives)
		{ after(grammarAccess.getElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLabel
entryRuleLabel
:
{ before(grammarAccess.getLabelRule()); }
	 ruleLabel
{ after(grammarAccess.getLabelRule()); } 
	 EOF 
;

// Rule Label
ruleLabel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLabelAccess().getGroup()); }
		(rule__Label__Group__0)
		{ after(grammarAccess.getLabelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInputText
entryRuleInputText
:
{ before(grammarAccess.getInputTextRule()); }
	 ruleInputText
{ after(grammarAccess.getInputTextRule()); } 
	 EOF 
;

// Rule InputText
ruleInputText 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputTextAccess().getGroup()); }
		(rule__InputText__Group__0)
		{ after(grammarAccess.getInputTextAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleButton
entryRuleButton
:
{ before(grammarAccess.getButtonRule()); }
	 ruleButton
{ after(grammarAccess.getButtonRule()); } 
	 EOF 
;

// Rule Button
ruleButton 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getButtonAccess().getGroup()); }
		(rule__Button__Group__0)
		{ after(grammarAccess.getButtonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFormUse
entryRuleFormUse
:
{ before(grammarAccess.getFormUseRule()); }
	 ruleFormUse
{ after(grammarAccess.getFormUseRule()); } 
	 EOF 
;

// Rule FormUse
ruleFormUse 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFormUseAccess().getGroup()); }
		(rule__FormUse__Group__0)
		{ after(grammarAccess.getFormUseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExp
entryRuleExp
:
{ before(grammarAccess.getExpRule()); }
	 ruleExp
{ after(grammarAccess.getExpRule()); } 
	 EOF 
;

// Rule Exp
ruleExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpAccess().getGroup()); }
		(rule__Exp__Group__0)
		{ after(grammarAccess.getExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEquality
entryRuleEquality
:
{ before(grammarAccess.getEqualityRule()); }
	 ruleEquality
{ after(grammarAccess.getEqualityRule()); } 
	 EOF 
;

// Rule Equality
ruleEquality 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityAccess().getGroup()); }
		(rule__Equality__Group__0)
		{ after(grammarAccess.getEqualityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompare
entryRuleCompare
:
{ before(grammarAccess.getCompareRule()); }
	 ruleCompare
{ after(grammarAccess.getCompareRule()); } 
	 EOF 
;

// Rule Compare
ruleCompare 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompareAccess().getGroup()); }
		(rule__Compare__Group__0)
		{ after(grammarAccess.getCompareAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConcat
entryRuleConcat
:
{ before(grammarAccess.getConcatRule()); }
	 ruleConcat
{ after(grammarAccess.getConcatRule()); } 
	 EOF 
;

// Rule Concat
ruleConcat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConcatAccess().getGroup()); }
		(rule__Concat__Group__0)
		{ after(grammarAccess.getConcatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddMinus
entryRuleAddMinus
:
{ before(grammarAccess.getAddMinusRule()); }
	 ruleAddMinus
{ after(grammarAccess.getAddMinusRule()); } 
	 EOF 
;

// Rule AddMinus
ruleAddMinus 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddMinusAccess().getGroup()); }
		(rule__AddMinus__Group__0)
		{ after(grammarAccess.getAddMinusAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFactor
entryRuleFactor
:
{ before(grammarAccess.getFactorRule()); }
	 ruleFactor
{ after(grammarAccess.getFactorRule()); } 
	 EOF 
;

// Rule Factor
ruleFactor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFactorAccess().getGroup()); }
		(rule__Factor__Group__0)
		{ after(grammarAccess.getFactorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLayoutAccess().getNameAssignment_0_0()); }
		(rule__Layout__NameAssignment_0_0)
		{ after(grammarAccess.getLayoutAccess().getNameAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getLayoutAccess().getNameAssignment_0_1()); }
		(rule__Layout__NameAssignment_0_1)
		{ after(grammarAccess.getLayoutAccess().getNameAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getLayoutParserRuleCall_0()); }
		ruleLayout
		{ after(grammarAccess.getComponentAccess().getLayoutParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getComponentAccess().getElementParserRuleCall_1()); }
		ruleElement
		{ after(grammarAccess.getComponentAccess().getElementParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getComponentAccess().getFormUseParserRuleCall_2()); }
		ruleFormUse
		{ after(grammarAccess.getComponentAccess().getFormUseParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getLabelParserRuleCall_0()); }
		ruleLabel
		{ after(grammarAccess.getElementAccess().getLabelParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getInputTextParserRuleCall_1()); }
		ruleInputText
		{ after(grammarAccess.getElementAccess().getInputTextParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getButtonParserRuleCall_2()); }
		ruleButton
		{ after(grammarAccess.getElementAccess().getButtonParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getGroup_0()); }
		(rule__Type__Group_0__0)
		{ after(grammarAccess.getTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getGroup_1()); }
		(rule__Type__Group_1__0)
		{ after(grammarAccess.getTypeAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getGroup_2()); }
		(rule__Type__Group_2__0)
		{ after(grammarAccess.getTypeAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpAccess().getGroup_1_0_0()); }
		(rule__Exp__Group_1_0_0__0)
		{ after(grammarAccess.getExpAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpAccess().getGroup_1_0_1()); }
		(rule__Exp__Group_1_0_1__0)
		{ after(grammarAccess.getExpAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getGroup_1_0_0()); }
		(rule__Equality__Group_1_0_0__0)
		{ after(grammarAccess.getEqualityAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityAccess().getGroup_1_0_1()); }
		(rule__Equality__Group_1_0_1__0)
		{ after(grammarAccess.getEqualityAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareAccess().getGroup_1_0_0()); }
		(rule__Compare__Group_1_0_0__0)
		{ after(grammarAccess.getCompareAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCompareAccess().getGroup_1_0_1()); }
		(rule__Compare__Group_1_0_1__0)
		{ after(grammarAccess.getCompareAccess().getGroup_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getCompareAccess().getGroup_1_0_2()); }
		(rule__Compare__Group_1_0_2__0)
		{ after(grammarAccess.getCompareAccess().getGroup_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getCompareAccess().getGroup_1_0_3()); }
		(rule__Compare__Group_1_0_3__0)
		{ after(grammarAccess.getCompareAccess().getGroup_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddMinus__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddMinusAccess().getGroup_1_0_0()); }
		(rule__AddMinus__Group_1_0_0__0)
		{ after(grammarAccess.getAddMinusAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAddMinusAccess().getGroup_1_0_1()); }
		(rule__AddMinus__Group_1_0_1__0)
		{ after(grammarAccess.getAddMinusAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getGroup_1_0_0()); }
		(rule__Factor__Group_1_0_0__0)
		{ after(grammarAccess.getFactorAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getGroup_1_0_1()); }
		(rule__Factor__Group_1_0_1__0)
		{ after(grammarAccess.getFactorAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_0()); }
		(rule__Primary__Group_0__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_1()); }
		(rule__Primary__Group_1__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_2()); }
		(rule__Primary__Group_2__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getTypeParserRuleCall_3()); }
		ruleType
		{ after(grammarAccess.getPrimaryAccess().getTypeParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UI__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UI__Group__0__Impl
	rule__UI__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UI__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUIAccess().getTitleKeyword_0()); }
	'title'
	{ after(grammarAccess.getUIAccess().getTitleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UI__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UI__Group__1__Impl
	rule__UI__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UI__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUIAccess().getTitleAssignment_1()); }
	(rule__UI__TitleAssignment_1)
	{ after(grammarAccess.getUIAccess().getTitleAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UI__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UI__Group__2__Impl
	rule__UI__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UI__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUIAccess().getFunctionsAssignment_2()); }
	(rule__UI__FunctionsAssignment_2)*
	{ after(grammarAccess.getUIAccess().getFunctionsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UI__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UI__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UI__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUIAccess().getFormsAssignment_3()); }
	(rule__UI__FormsAssignment_3)*
	{ after(grammarAccess.getUIAccess().getFormsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
	'function'
	{ after(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
	(rule__Function__NameAssignment_1)
	{ after(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getGroup_3()); }
	(rule__Function__Group_3__0)?
	{ after(grammarAccess.getFunctionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__4__Impl
	rule__Function__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__5__Impl
	rule__Function__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getColonKeyword_5()); }
	':'
	{ after(grammarAccess.getFunctionAccess().getColonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getTypesAssignment_6()); }
	(rule__Function__TypesAssignment_6)
	{ after(grammarAccess.getFunctionAccess().getTypesAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_3__0__Impl
	rule__Function__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getTypesAssignment_3_0()); }
	(rule__Function__TypesAssignment_3_0)
	{ after(grammarAccess.getFunctionAccess().getTypesAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getGroup_3_1()); }
	(rule__Function__Group_3_1__0)*
	{ after(grammarAccess.getFunctionAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_3_1__0__Impl
	rule__Function__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getFunctionAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getTypesAssignment_3_1_1()); }
	(rule__Function__TypesAssignment_3_1_1)
	{ after(grammarAccess.getFunctionAccess().getTypesAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Form__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Form__Group__0__Impl
	rule__Form__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormAccess().getFormKeyword_0()); }
	'form'
	{ after(grammarAccess.getFormAccess().getFormKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Form__Group__1__Impl
	rule__Form__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormAccess().getNameAssignment_1()); }
	(rule__Form__NameAssignment_1)
	{ after(grammarAccess.getFormAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Form__Group__2__Impl
	rule__Form__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormAccess().getGroup_2()); }
	(rule__Form__Group_2__0)?
	{ after(grammarAccess.getFormAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Form__Group__3__Impl
	rule__Form__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getFormAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Form__Group__4__Impl
	rule__Form__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormAccess().getLayoutAssignment_4()); }
	(rule__Form__LayoutAssignment_4)
	{ after(grammarAccess.getFormAccess().getLayoutAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Form__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getFormAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Form__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Form__Group_2__0__Impl
	rule__Form__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getFormAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Form__Group_2__1__Impl
	rule__Form__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormAccess().getGroup_2_1()); }
	(rule__Form__Group_2_1__0)?
	{ after(grammarAccess.getFormAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Form__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getFormAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Form__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Form__Group_2_1__0__Impl
	rule__Form__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormAccess().getParametersAssignment_2_1_0()); }
	(rule__Form__ParametersAssignment_2_1_0)
	{ after(grammarAccess.getFormAccess().getParametersAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Form__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormAccess().getGroup_2_1_1()); }
	(rule__Form__Group_2_1_1__0)*
	{ after(grammarAccess.getFormAccess().getGroup_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Form__Group_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Form__Group_2_1_1__0__Impl
	rule__Form__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormAccess().getCommaKeyword_2_1_1_0()); }
	','
	{ after(grammarAccess.getFormAccess().getCommaKeyword_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Form__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormAccess().getParametersAssignment_2_1_1_1()); }
	(rule__Form__ParametersAssignment_2_1_1_1)
	{ after(grammarAccess.getFormAccess().getParametersAssignment_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Layout__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Layout__Group__0__Impl
	rule__Layout__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayoutAccess().getAlternatives_0()); }
	(rule__Layout__Alternatives_0)
	{ after(grammarAccess.getLayoutAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Layout__Group__1__Impl
	rule__Layout__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayoutAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getLayoutAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Layout__Group__2__Impl
	rule__Layout__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayoutAccess().getComponentsAssignment_2()); }
	(rule__Layout__ComponentsAssignment_2)*
	{ after(grammarAccess.getLayoutAccess().getComponentsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Layout__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayoutAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getLayoutAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Label__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Label__Group__0__Impl
	rule__Label__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelAccess().getLabelKeyword_0()); }
	'label'
	{ after(grammarAccess.getLabelAccess().getLabelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Label__Group__1__Impl
	rule__Label__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getLabelAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Label__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelAccess().getExpressionAssignment_2()); }
	(rule__Label__ExpressionAssignment_2)
	{ after(grammarAccess.getLabelAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InputText__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputText__Group__0__Impl
	rule__InputText__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputText__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputTextAccess().getInputKeyword_0()); }
	'input'
	{ after(grammarAccess.getInputTextAccess().getInputKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputText__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputText__Group__1__Impl
	rule__InputText__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InputText__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputTextAccess().getNameAssignment_1()); }
	(rule__InputText__NameAssignment_1)
	{ after(grammarAccess.getInputTextAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputText__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputText__Group__2__Impl
	rule__InputText__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InputText__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputTextAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getInputTextAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputText__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputText__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputText__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputTextAccess().getExpressionAssignment_3()); }
	(rule__InputText__ExpressionAssignment_3)
	{ after(grammarAccess.getInputTextAccess().getExpressionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Button__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__0__Impl
	rule__Button__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getButtonKeyword_0()); }
	'button'
	{ after(grammarAccess.getButtonAccess().getButtonKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__1__Impl
	rule__Button__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getAsteriskKeyword_1()); }
	('*')?
	{ after(grammarAccess.getButtonAccess().getAsteriskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__2__Impl
	rule__Button__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getNameAssignment_2()); }
	(rule__Button__NameAssignment_2)
	{ after(grammarAccess.getButtonAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__3__Impl
	rule__Button__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getButtonAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getExpressionAssignment_4()); }
	(rule__Button__ExpressionAssignment_4)
	{ after(grammarAccess.getButtonAccess().getExpressionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FormUse__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormUse__Group__0__Impl
	rule__FormUse__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormUse__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormUseAccess().getNameAssignment_0()); }
	(rule__FormUse__NameAssignment_0)
	{ after(grammarAccess.getFormUseAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormUse__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormUse__Group__1__Impl
	rule__FormUse__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FormUse__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormUseAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getFormUseAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormUse__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormUse__Group__2__Impl
	rule__FormUse__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FormUse__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormUseAccess().getGroup_2()); }
	(rule__FormUse__Group_2__0)?
	{ after(grammarAccess.getFormUseAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormUse__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormUse__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormUse__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormUseAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getFormUseAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FormUse__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormUse__Group_2__0__Impl
	rule__FormUse__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormUse__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormUseAccess().getExpressionsAssignment_2_0()); }
	(rule__FormUse__ExpressionsAssignment_2_0)
	{ after(grammarAccess.getFormUseAccess().getExpressionsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormUse__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormUse__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormUse__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormUseAccess().getGroup_2_1()); }
	(rule__FormUse__Group_2_1__0)*
	{ after(grammarAccess.getFormUseAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FormUse__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormUse__Group_2_1__0__Impl
	rule__FormUse__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormUse__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormUseAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getFormUseAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormUse__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormUse__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormUse__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormUseAccess().getExpressionsAssignment_2_1_1()); }
	(rule__FormUse__ExpressionsAssignment_2_1_1)
	{ after(grammarAccess.getFormUseAccess().getExpressionsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getNameAssignment_0()); }
	(rule__Parameter__NameAssignment_0)
	{ after(grammarAccess.getParameterAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getParameterAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getTypeAssignment_2()); }
	(rule__Parameter__TypeAssignment_2)
	{ after(grammarAccess.getParameterAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_0__0__Impl
	rule__Type__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getBoolTypeAction_0_0()); }
	()
	{ after(grammarAccess.getTypeAccess().getBoolTypeAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getBooleanKeyword_0_1()); }
	'boolean'
	{ after(grammarAccess.getTypeAccess().getBooleanKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_1__0__Impl
	rule__Type__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getStringTypeAction_1_0()); }
	()
	{ after(grammarAccess.getTypeAccess().getStringTypeAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getStringKeyword_1_1()); }
	'string'
	{ after(grammarAccess.getTypeAccess().getStringKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__0__Impl
	rule__Type__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getNumberTypeAction_2_0()); }
	()
	{ after(grammarAccess.getTypeAccess().getNumberTypeAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getNumberKeyword_2_1()); }
	'number'
	{ after(grammarAccess.getTypeAccess().getNumberKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group__0__Impl
	rule__Exp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getEqualityParserRuleCall_0()); }
	ruleEquality
	{ after(grammarAccess.getExpAccess().getEqualityParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getGroup_1()); }
	(rule__Exp__Group_1__0)*
	{ after(grammarAccess.getExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1__0__Impl
	rule__Exp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getAlternatives_1_0()); }
	(rule__Exp__Alternatives_1_0)
	{ after(grammarAccess.getExpAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getRightAssignment_1_1()); }
	(rule__Exp__RightAssignment_1_1)
	{ after(grammarAccess.getExpAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1_0_0__0__Impl
	rule__Exp__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getAndLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getExpAccess().getAndLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getAmpersandAmpersandKeyword_1_0_0_1()); }
	'&&'
	{ after(grammarAccess.getExpAccess().getAmpersandAmpersandKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1_0_1__0__Impl
	rule__Exp__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getOrLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getExpAccess().getOrLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getVerticalLineVerticalLineKeyword_1_0_1_1()); }
	'||'
	{ after(grammarAccess.getExpAccess().getVerticalLineVerticalLineKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group__0__Impl
	rule__Equality__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getCompareParserRuleCall_0()); }
	ruleCompare
	{ after(grammarAccess.getEqualityAccess().getCompareParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getGroup_1()); }
	(rule__Equality__Group_1__0)*
	{ after(grammarAccess.getEqualityAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__0__Impl
	rule__Equality__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getAlternatives_1_0()); }
	(rule__Equality__Alternatives_1_0)
	{ after(grammarAccess.getEqualityAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getRightAssignment_1_1()); }
	(rule__Equality__RightAssignment_1_1)
	{ after(grammarAccess.getEqualityAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1_0_0__0__Impl
	rule__Equality__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getEQLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getEqualityAccess().getEQLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getEqualsSignEqualsSignKeyword_1_0_0_1()); }
	'=='
	{ after(grammarAccess.getEqualityAccess().getEqualsSignEqualsSignKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1_0_1__0__Impl
	rule__Equality__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getNEQLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getEqualityAccess().getNEQLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getExclamationMarkEqualsSignKeyword_1_0_1_1()); }
	'!='
	{ after(grammarAccess.getEqualityAccess().getExclamationMarkEqualsSignKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compare__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare__Group__0__Impl
	rule__Compare__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareAccess().getConcatParserRuleCall_0()); }
	ruleConcat
	{ after(grammarAccess.getCompareAccess().getConcatParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareAccess().getGroup_1()); }
	(rule__Compare__Group_1__0)*
	{ after(grammarAccess.getCompareAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compare__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare__Group_1__0__Impl
	rule__Compare__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareAccess().getAlternatives_1_0()); }
	(rule__Compare__Alternatives_1_0)
	{ after(grammarAccess.getCompareAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareAccess().getRightAssignment_1_1()); }
	(rule__Compare__RightAssignment_1_1)
	{ after(grammarAccess.getCompareAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compare__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare__Group_1_0_0__0__Impl
	rule__Compare__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareAccess().getLTLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getCompareAccess().getLTLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareAccess().getLessThanSignKeyword_1_0_0_1()); }
	'<'
	{ after(grammarAccess.getCompareAccess().getLessThanSignKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compare__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare__Group_1_0_1__0__Impl
	rule__Compare__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareAccess().getLTELeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getCompareAccess().getLTELeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareAccess().getLessThanSignEqualsSignKeyword_1_0_1_1()); }
	'<='
	{ after(grammarAccess.getCompareAccess().getLessThanSignEqualsSignKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compare__Group_1_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare__Group_1_0_2__0__Impl
	rule__Compare__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareAccess().getGTLeftAction_1_0_2_0()); }
	()
	{ after(grammarAccess.getCompareAccess().getGTLeftAction_1_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare__Group_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareAccess().getGreaterThanSignKeyword_1_0_2_1()); }
	'>'
	{ after(grammarAccess.getCompareAccess().getGreaterThanSignKeyword_1_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compare__Group_1_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare__Group_1_0_3__0__Impl
	rule__Compare__Group_1_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareAccess().getGTELeftAction_1_0_3_0()); }
	()
	{ after(grammarAccess.getCompareAccess().getGTELeftAction_1_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare__Group_1_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareAccess().getGreaterThanSignEqualsSignKeyword_1_0_3_1()); }
	'>='
	{ after(grammarAccess.getCompareAccess().getGreaterThanSignEqualsSignKeyword_1_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Concat__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concat__Group__0__Impl
	rule__Concat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatAccess().getAddMinusParserRuleCall_0()); }
	ruleAddMinus
	{ after(grammarAccess.getConcatAccess().getAddMinusParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concat__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatAccess().getGroup_1()); }
	(rule__Concat__Group_1__0)*
	{ after(grammarAccess.getConcatAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Concat__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concat__Group_1__0__Impl
	rule__Concat__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatAccess().getGroup_1_0()); }
	(rule__Concat__Group_1_0__0)
	{ after(grammarAccess.getConcatAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concat__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatAccess().getRightAssignment_1_1()); }
	(rule__Concat__RightAssignment_1_1)
	{ after(grammarAccess.getConcatAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Concat__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concat__Group_1_0__0__Impl
	rule__Concat__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatAccess().getConcLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getConcatAccess().getConcLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concat__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatAccess().getAmpersandKeyword_1_0_1()); }
	'&'
	{ after(grammarAccess.getConcatAccess().getAmpersandKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddMinus__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddMinus__Group__0__Impl
	rule__AddMinus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddMinus__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddMinusAccess().getFactorParserRuleCall_0()); }
	ruleFactor
	{ after(grammarAccess.getAddMinusAccess().getFactorParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddMinus__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddMinus__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddMinus__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddMinusAccess().getGroup_1()); }
	(rule__AddMinus__Group_1__0)*
	{ after(grammarAccess.getAddMinusAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddMinus__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddMinus__Group_1__0__Impl
	rule__AddMinus__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddMinus__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddMinusAccess().getAlternatives_1_0()); }
	(rule__AddMinus__Alternatives_1_0)
	{ after(grammarAccess.getAddMinusAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddMinus__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddMinus__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddMinus__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddMinusAccess().getRightAssignment_1_1()); }
	(rule__AddMinus__RightAssignment_1_1)
	{ after(grammarAccess.getAddMinusAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddMinus__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddMinus__Group_1_0_0__0__Impl
	rule__AddMinus__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddMinus__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddMinusAccess().getPlusLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getAddMinusAccess().getPlusLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddMinus__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddMinus__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddMinus__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddMinusAccess().getPlusSignKeyword_1_0_0_1()); }
	'+'
	{ after(grammarAccess.getAddMinusAccess().getPlusSignKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddMinus__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddMinus__Group_1_0_1__0__Impl
	rule__AddMinus__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddMinus__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddMinusAccess().getMinusLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getAddMinusAccess().getMinusLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddMinus__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddMinus__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddMinus__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddMinusAccess().getHyphenMinusKeyword_1_0_1_1()); }
	'-'
	{ after(grammarAccess.getAddMinusAccess().getHyphenMinusKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group__0__Impl
	rule__Factor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getFactorAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getGroup_1()); }
	(rule__Factor__Group_1__0)*
	{ after(grammarAccess.getFactorAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1__0__Impl
	rule__Factor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getAlternatives_1_0()); }
	(rule__Factor__Alternatives_1_0)
	{ after(grammarAccess.getFactorAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getRightAssignment_1_1()); }
	(rule__Factor__RightAssignment_1_1)
	{ after(grammarAccess.getFactorAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1_0_0__0__Impl
	rule__Factor__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getMultLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getFactorAccess().getMultLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getAsteriskKeyword_1_0_0_1()); }
	'*'
	{ after(grammarAccess.getFactorAccess().getAsteriskKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1_0_1__0__Impl
	rule__Factor__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getDivLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getFactorAccess().getDivLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getSolidusKeyword_1_0_1_1()); }
	'/'
	{ after(grammarAccess.getFactorAccess().getSolidusKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__0__Impl
	rule__Primary__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getValueIntAction_0_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getValueIntAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getValueAssignment_0_1()); }
	(rule__Primary__ValueAssignment_0_1)
	{ after(grammarAccess.getPrimaryAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__0__Impl
	rule__Primary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getValueStringAction_1_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getValueStringAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getValueAssignment_1_1()); }
	(rule__Primary__ValueAssignment_1_1)
	{ after(grammarAccess.getPrimaryAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_2__0__Impl
	rule__Primary__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_2__1__Impl
	rule__Primary__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExpParserRuleCall_2_1()); }
	ruleExp
	{ after(grammarAccess.getPrimaryAccess().getExpParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UI__TitleAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUIAccess().getTitleIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getUIAccess().getTitleIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UI__FunctionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUIAccess().getFunctionsFunctionParserRuleCall_2_0()); }
		ruleFunction
		{ after(grammarAccess.getUIAccess().getFunctionsFunctionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UI__FormsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUIAccess().getFormsFormParserRuleCall_3_0()); }
		ruleForm
		{ after(grammarAccess.getUIAccess().getFormsFormParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__TypesAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getTypesTypeParserRuleCall_3_0_0()); }
		ruleType
		{ after(grammarAccess.getFunctionAccess().getTypesTypeParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__TypesAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getTypesTypeParserRuleCall_3_1_1_0()); }
		ruleType
		{ after(grammarAccess.getFunctionAccess().getTypesTypeParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__TypesAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getTypesTypeParserRuleCall_6_0()); }
		ruleType
		{ after(grammarAccess.getFunctionAccess().getTypesTypeParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFormAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__ParametersAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormAccess().getParametersParameterParserRuleCall_2_1_0_0()); }
		ruleParameter
		{ after(grammarAccess.getFormAccess().getParametersParameterParserRuleCall_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__ParametersAssignment_2_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormAccess().getParametersParameterParserRuleCall_2_1_1_1_0()); }
		ruleParameter
		{ after(grammarAccess.getFormAccess().getParametersParameterParserRuleCall_2_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__LayoutAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormAccess().getLayoutLayoutParserRuleCall_4_0()); }
		ruleLayout
		{ after(grammarAccess.getFormAccess().getLayoutLayoutParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__NameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLayoutAccess().getNameRowKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getLayoutAccess().getNameRowKeyword_0_0_0()); }
			'row'
			{ after(grammarAccess.getLayoutAccess().getNameRowKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getLayoutAccess().getNameRowKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLayoutAccess().getNameColumnKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getLayoutAccess().getNameColumnKeyword_0_1_0()); }
			'column'
			{ after(grammarAccess.getLayoutAccess().getNameColumnKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getLayoutAccess().getNameColumnKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__ComponentsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLayoutAccess().getComponentsComponentParserRuleCall_2_0()); }
		ruleComponent
		{ after(grammarAccess.getLayoutAccess().getComponentsComponentParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabelAccess().getExpressionExpParserRuleCall_2_0()); }
		ruleExp
		{ after(grammarAccess.getLabelAccess().getExpressionExpParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputText__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputTextAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getInputTextAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputText__ExpressionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputTextAccess().getExpressionExpParserRuleCall_3_0()); }
		ruleExp
		{ after(grammarAccess.getInputTextAccess().getExpressionExpParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButtonAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getButtonAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__ExpressionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButtonAccess().getExpressionExpParserRuleCall_4_0()); }
		ruleExp
		{ after(grammarAccess.getButtonAccess().getExpressionExpParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormUse__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormUseAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getFormUseAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormUse__ExpressionsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormUseAccess().getExpressionsExpParserRuleCall_2_0_0()); }
		ruleExp
		{ after(grammarAccess.getFormUseAccess().getExpressionsExpParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormUse__ExpressionsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormUseAccess().getExpressionsExpParserRuleCall_2_1_1_0()); }
		ruleExp
		{ after(grammarAccess.getFormUseAccess().getExpressionsExpParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getTypeTypeParserRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getParameterAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpAccess().getRightEqualityParserRuleCall_1_1_0()); }
		ruleEquality
		{ after(grammarAccess.getExpAccess().getRightEqualityParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getRightCompareParserRuleCall_1_1_0()); }
		ruleCompare
		{ after(grammarAccess.getEqualityAccess().getRightCompareParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareAccess().getRightConcatParserRuleCall_1_1_0()); }
		ruleConcat
		{ after(grammarAccess.getCompareAccess().getRightConcatParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcatAccess().getRightAddMinusParserRuleCall_1_1_0()); }
		ruleAddMinus
		{ after(grammarAccess.getConcatAccess().getRightAddMinusParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddMinus__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddMinusAccess().getRightFactorParserRuleCall_1_1_0()); }
		ruleFactor
		{ after(grammarAccess.getAddMinusAccess().getRightFactorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getRightPrimaryParserRuleCall_1_1_0()); }
		rulePrimary
		{ after(grammarAccess.getFactorAccess().getRightPrimaryParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getValueINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getPrimaryAccess().getValueINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getValueSTRINGTerminalRuleCall_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getPrimaryAccess().getValueSTRINGTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
